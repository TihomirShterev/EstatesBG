{"version":3,"sources":["services/userService.js","components/pages/user/profile/index.module.css","components/pages/user/profile/index.js"],"names":["url","userService","authenticate","path","data","onSuccess","onFailure","a","fetch","method","body","JSON","stringify","headers","promise","authToken","get","document","cookie","json","res","email","id","_id","getProfileInfo","module","exports","ProfilePage","props","getProfile","ok","history","push","user","setState","myItems","state","this","match","params","userId","context","loggedIn","className","styles","profile","flex","to","Component","contextType","UserContext"],"mappings":"2IAAMA,EAAM,4CAENC,EAAc,CAClBC,aAAa,WAAD,4BAAE,WAAOC,EAAMC,EAAMC,EAAWC,GAA9B,mBAAAC,EAAA,+EAEYC,MAAMR,EAAMG,EAAM,CACtCM,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACP,eAAgB,sBANV,cAEJC,EAFI,OAUJC,EAAYD,EAAQD,QAAQG,IAAI,iBACtCC,SAASC,OAAT,sBAAiCH,GAXvB,SAYQD,EAAQK,OAZhB,OAYJC,EAZI,OAcNL,EACFV,EAAU,CACRgB,MAAOD,EAAIC,MACXC,GAAIF,EAAIG,MAGVjB,IApBQ,kDAuBVA,EAAU,EAAD,IAvBC,0DAAF,yDAAC,GA0BbkB,eAAe,WAAD,4BAAE,WAAOF,GAAP,SAAAf,EAAA,+EACPC,MAAM,GAAD,OAAIR,EAAJ,wBAAuBsB,KADrB,2CAAF,mDAAC,IAMFrB,O,mBClCfwB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,aAAa,4BAA4B,eAAe,gC,gKCMpIC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAcRC,WAfmB,uCAeN,WAAOP,GAAP,iBAAAf,EAAA,sEACON,IAAYuB,eAAeF,GADlC,cACLF,EADK,QAGFU,IACP,EAAKF,MAAMG,QAAQC,KAAK,UAJf,SAOQZ,EAAID,OAPZ,OAOLc,EAPK,OASX,EAAKC,SAAS,CACZb,MAAOY,EAAKZ,MACZc,QAASF,EAAKE,UAXL,2CAfM,sDAGjB,EAAKC,MAAQ,CACXf,MAAO,KACPc,QAAS,MALM,E,qDAWnB,WACEE,KAAKR,WAAWQ,KAAKT,MAAMU,MAAMC,OAAOC,U,oBAkB1C,WAAU,IAAD,EAIHH,KAAKD,MAFPf,EAFK,EAELA,MACAc,EAHK,EAGLA,QAGF,OAA8B,OAA1BE,KAAKI,QAAQC,SAEb,cAAC,IAAD,UACE,gDAMJ,eAAC,IAAD,WACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,2CACA,sBAAKF,UAAWC,IAAOE,KAAvB,UACE,wCACA,+BAAOzB,OAET,sBAAKsB,UAAWC,IAAOE,KAAvB,UACE,2CACA,+BAAOX,UAGTE,KAAKI,QAAQC,SAAW,KAAO,cAAC,IAAD,CAAUK,GAAG,uB,GA1D5BC,aAApBrB,EAUGsB,YAAcC,IAsDRvB","file":"static/js/10.d51fd327.chunk.js","sourcesContent":["const url = 'https://estatesbg.herokuapp.com/api/users';\r\n\r\nconst userService = {\r\n  authenticate: async (path, data, onSuccess, onFailure) => {\r\n    try {\r\n      const promise = await fetch(url + path, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const authToken = promise.headers.get('Authorization');\r\n      document.cookie = `auth-cookie=${authToken}`;\r\n      const res = await promise.json();\r\n\r\n      if (authToken) {\r\n        onSuccess({\r\n          email: res.email,\r\n          id: res._id\r\n        });\r\n      } else {\r\n        onFailure();\r\n      }\r\n    } catch (err) {\r\n      onFailure(err);\r\n    }\r\n  },\r\n  getProfileInfo: async (id) => {\r\n    return fetch(`${url}/profile?_id=${id}`);\r\n  }\r\n};\r\n\r\n\r\nexport default userService;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__UCwll\",\"flex\":\"profile_flex__3bRwK\",\"red-button\":\"profile_red-button__3cDzM\",\"green-button\":\"profile_green-button__283R9\"};","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport UserContext from '../../../../Context';\r\nimport userService from '../../../../services/userService';\r\nimport Layout from '../../../common/layout';\r\nimport styles from './index.module.css';\r\n\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: null,\r\n      myItems: null\r\n    };\r\n  }\r\n\r\n  static contextType = UserContext;\r\n\r\n  componentDidMount() {\r\n    this.getProfile(this.props.match.params.userId);\r\n  }\r\n\r\n  getProfile = async (id) => {\r\n    const res = await userService.getProfileInfo(id);\r\n\r\n    if (!res.ok) {\r\n      this.props.history.push('/error');\r\n    }\r\n\r\n    const user = await res.json();\r\n\r\n    this.setState({\r\n      email: user.email,\r\n      myItems: user.myItems\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      myItems\r\n    } = this.state;\r\n\r\n    if (this.context.loggedIn === null) {\r\n      return (\r\n        <Layout>\r\n          <div>Loading....</div>\r\n        </Layout>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <div className={styles.profile}>\r\n          <h3>User Info</h3>\r\n          <div className={styles.flex}>\r\n            <p>Email: </p>\r\n            <span>{email}</span>\r\n          </div>\r\n          <div className={styles.flex}>\r\n            <p>My Offers:</p>\r\n            <span>{myItems}</span>\r\n          </div>\r\n        </div>\r\n        { this.context.loggedIn ? null : <Redirect to=\"/user/login\" />}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;"],"sourceRoot":""}