{"version":3,"sources":["services/userService.js","components/pages/user/login/index.module.css","components/pages/user/login/index.js"],"names":["url","userService","authenticate","path","data","onSuccess","onFailure","a","fetch","method","body","JSON","stringify","headers","promise","authToken","get","document","cookie","json","res","email","id","_id","getProfileInfo","module","exports","LoginPage","props","handleChange","event","type","newState","target","value","setState","handleSubmit","preventDefault","state","password","emptyFieldsError","user","invalidInputError","context","logIn","history","push","err","console","log","this","emptyFieldsErrorMessage","invalidInputErrorMessage","className","styles","login","onSubmit","htmlFor","name","onChange","e","placeholder","error","to","loggedIn","Component","contextType","UserContext"],"mappings":"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","file":"static/js/9.82e6f2af.chunk.js","sourcesContent":["const url = 'https://estatesbg.herokuapp.com/api/users';\r\n\r\nconst userService = {\r\n  authenticate: async (path, data, onSuccess, onFailure) => {\r\n    try {\r\n      const promise = await fetch(url + path, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const authToken = promise.headers.get('Authorization');\r\n      document.cookie = `auth-cookie=${authToken}`;\r\n      const res = await promise.json();\r\n\r\n      if (authToken) {\r\n        onSuccess({\r\n          email: res.email,\r\n          id: res._id\r\n        });\r\n      } else {\r\n        onFailure();\r\n      }\r\n    } catch (err) {\r\n      onFailure(err);\r\n    }\r\n  },\r\n  getProfileInfo: async (id) => {\r\n    return fetch(`${url}/profile?_id=${id}`);\r\n  }\r\n};\r\n\r\n\r\nexport default userService;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__18RH6\",\"register\":\"login_register__1XUst\",\"tel\":\"login_tel__ebUy6\",\"field\":\"login_field__IBFx3\",\"error\":\"login_error__3PQdj\",\"input-error\":\"login_input-error__1kawq\"};","import React, { Component } from 'react';\r\nimport Layout from '../../../common/layout';\r\nimport styles from './index.module.css';\r\nimport {\r\n  Link, Redirect\r\n} from 'react-router-dom';\r\nimport UserContext from '../../../../Context';\r\nimport userService from '../../../../services/userService';\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      invalidInputError: false,\r\n      emptyFieldsError: false\r\n    };\r\n  }\r\n\r\n  static contextType = UserContext;\r\n\r\n  handleChange = (event, type) => {\r\n    const newState = {};\r\n    newState[type] = event.target.value;\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      email,\r\n      password\r\n    } = this.state;\r\n\r\n    if (!email || !password) {\r\n      this.setState({\r\n        emptyFieldsError: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        emptyFieldsError: false\r\n      });\r\n    }\r\n\r\n    await userService.authenticate(\r\n      '/login',\r\n      { email, password },\r\n      (user) => {\r\n        this.setState({\r\n          invalidInputError: false\r\n        });\r\n        this.context.logIn(user);\r\n        this.props.history.push('/');\r\n      },\r\n      (err) => {\r\n        this.setState({\r\n          invalidInputError: true\r\n        });\r\n        console.log('Error', err)\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      invalidInputError,\r\n      emptyFieldsError\r\n    } = this.state;\r\n\r\n    const emptyFieldsErrorMessage = emptyFieldsError ? 'Please fill all fields above' : null;\r\n    const invalidInputErrorMessage = invalidInputError && !emptyFieldsError ? 'Invalid email or password' : null;\r\n\r\n    return (\r\n      <Layout>\r\n        <form className={styles.login} onSubmit={this.handleSubmit}>\r\n          <fieldset>\r\n            <h2>Login Form</h2>\r\n\r\n            <p className={styles[\"field field-icon\"]}>\r\n              <label htmlFor=\"email\"><span><i className=\"fas fa-envelope\"></i></span></label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => this.handleChange(e, 'email')}\r\n                placeholder=\"pesho.peshev@gmail.com\"\r\n              />\r\n            </p>\r\n\r\n            <p className={styles[\"field field-icon\"]}>\r\n              <label htmlFor=\"password\"><span><i className=\"fas fa-lock\"></i></span></label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => this.handleChange(e, 'password')}\r\n                placeholder=\"******\"\r\n              />\r\n            </p>\r\n\r\n            <p className={styles.error}>\r\n              {invalidInputErrorMessage}\r\n            </p>\r\n            <p className={styles.error}>\r\n              {emptyFieldsErrorMessage}\r\n            </p>\r\n            <button type=\"submit\">Login</button>\r\n\r\n            <p className={styles[\"text-center\"]}>\r\n              No account yet?\r\n              <Link to=\"/user/register\">Register</Link>\r\n            </p>\r\n\r\n          </fieldset>\r\n        </form>\r\n        { this.context.loggedIn ? <Redirect to=\"/\" /> : null}\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LoginPage;"],"sourceRoot":""}