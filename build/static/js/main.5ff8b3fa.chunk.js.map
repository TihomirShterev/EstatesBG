{"version":3,"sources":["Context.js","utils/cookie.js","App.js","navigation.js","index.js"],"names":["UserContext","React","createContext","loggedIn","user","logIn","logOut","getCookie","name","cookieValue","document","cookie","match","App","props","setState","state","token","fetch","method","headers","then","promise","json","res","status","email","id","_id","this","Provider","value","children","Component","LazyHomePage","lazy","LazyRegisterPage","LazyLoginPage","LazyProfilePage","LazyItemsPage","LazyCreatePage","LazyDetailsPage","LazyNotFoundPage","LazyNavigation","context","fallback","path","exact","component","render","to","contextType","ReactDOM","StrictMode","getElementById"],"mappings":"6GAAA,WAGMA,EAHN,OAGoBC,EAAMC,cAAc,CACtCC,UAAU,EACVC,KAAM,KACNC,MAAO,aACPC,OAAQ,eAGKN,O,gCCLAO,IALG,SAACC,GACjB,IAAMC,EAAcC,SAASC,OAAOC,MAAM,UAAYJ,EAAO,iBAC7D,OAAOC,EAAcA,EAAY,GAAK,O,sJCwFzBI,E,kDArFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRT,MAAQ,SAACD,GACP,EAAKW,SAAS,CACZZ,UAAU,EACVC,UAZe,EAgBnBE,OAAS,WAEPI,SAASC,OAAS,yDAElB,EAAKI,SAAS,CACZZ,UAAU,EACVC,KAAM,QAnBR,EAAKY,MAAQ,CACXb,SAAU,KACVC,KAAM,MALS,E,qDA0BnB,WAAqB,IAAD,OACZa,EAAQV,YAAU,eAGnBU,EAMLC,MAAM,mDAAoD,CACxDC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBH,KAGlBI,MAAK,SAAAC,GAEJ,OAAOA,EAAQC,UAEhBF,MAAK,SAAAG,GAEAA,EAAIC,OACN,EAAKpB,MAAM,CACTqB,MAAOF,EAAIpB,KAAKsB,MAChBC,GAAIH,EAAIpB,KAAKwB,MAGf,EAAKtB,YAxBTuB,KAAKvB,W,oBA6BT,WAAU,IAAD,EAIHuB,KAAKb,MAFPb,EAFK,EAELA,SACAC,EAHK,EAGLA,KASF,OACE,cAAC,IAAY0B,SAAb,CAAsBC,MAAO,CAC3B5B,WACAC,OACAC,MAAOwB,KAAKxB,MACZC,OAAQuB,KAAKvB,QAJf,SAMGuB,KAAKf,MAAMkB,e,GAhFFC,a,uBC8BZC,EAAejC,IAAMkC,MAAK,kBAAM,sDAChCC,EAAmBnC,IAAMkC,MAAK,kBAAM,uDACpCE,EAAgBpC,IAAMkC,MAAK,kBAAM,sDACjCG,EAAkBrC,IAAMkC,MAAK,kBAAM,uDACnCI,EAAgBtC,IAAMkC,MAAK,kBAAM,sDACjCK,EAAiBvC,IAAMkC,MAAK,kBAAM,sDAClCM,EAAkBxC,IAAMkC,MAAK,kBAAM,sDACnCO,EAAmBzC,IAAMkC,MAAK,kBAAM,gCAEpCQ,E,4JAIJ,WAAU,IAENxC,EACE0B,KAAKe,QADPzC,SAGF,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAU0C,SAAU,8CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWd,IACjC,cAAC,IAAD,CAAOY,KAAK,iBAAiBE,UAAWZ,IACxC,cAAC,IAAD,CAAOU,KAAK,cAAcE,UAAWX,IACrC,cAAC,IAAD,CAAOS,KAAK,eAAeG,OAAQ,kBAAM9C,EAAW,KAAO,cAAC,IAAD,CAAU+C,GAAG,SACxE,cAAC,IAAD,CAAOJ,KAAK,wBAAwBE,UAAWV,IAC/C,cAAC,IAAD,CAAOQ,KAAK,QAAQC,OAAK,EAACC,UAAWT,IACrC,cAAC,IAAD,CAAOO,KAAK,eAAZ,SAEI3C,EACK,cAACqC,EAAD,IACA,cAAC,IAAD,CAAUU,GAAG,kBAGtB,cAAC,IAAD,CAAOJ,KAAK,wBAAZ,SAEI3C,EACK,cAACsC,EAAD,IACA,cAAC,IAAD,CAAUS,GAAG,kBAGtB,cAAC,IAAD,CAAOF,UAAWN,e,GAjCDT,aAAvBU,EAEGQ,YAAcnD,IAwCR2C,QC9EfS,IAASH,OACP,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,UAEE,cAAC,EAAD,QAGJ3C,SAAS4C,eAAe,W","file":"static/js/main.5ff8b3fa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// pages' authorization\r\nconst UserContext = React.createContext({\r\n  loggedIn: false,\r\n  user: null,\r\n  logIn: () => { },\r\n  logOut: () => { }\r\n});\r\n\r\nexport default UserContext;","const getCookie = (name) => {\r\n  const cookieValue = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n  return cookieValue ? cookieValue[2] : null;\r\n}\r\n\r\nexport default getCookie;","import React, { Component } from 'react';\r\nimport UserContext from './Context';\r\nimport getCookie from './utils/cookie';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loggedIn: null,\r\n      user: null\r\n    };\r\n  }\r\n\r\n  logIn = (user) => {\r\n    this.setState({\r\n      loggedIn: true,\r\n      user\r\n    });\r\n  }\r\n\r\n  logOut = () => {\r\n    // clear cookie\r\n    document.cookie = 'auth-cookie= ; expires = Thu, 01 Jan 1970 00:00:00 HMT';\r\n\r\n    this.setState({\r\n      loggedIn: false,\r\n      user: null\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = getCookie('auth-cookie');\r\n    // console.log(token);\r\n\r\n    if (!token) {\r\n      this.logOut();\r\n      return;\r\n    }\r\n\r\n    // to keep the cookie after page reload\r\n    fetch('https://estatesbg.herokuapp.com/api/users/verify', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n      }\r\n    })\r\n      .then(promise => {\r\n        // console.log(promise);\r\n        return promise.json();\r\n      })\r\n      .then(res => {\r\n        // console.log(res);\r\n        if (res.status) {\r\n          this.logIn({\r\n            email: res.user.email,\r\n            id: res.user._id\r\n          });\r\n        } else {\r\n          this.logOut();\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loggedIn,\r\n      user\r\n    } = this.state;\r\n\r\n    if (loggedIn === null) {\r\n      // this is done so when we're logged\r\n      // it doesn't show first guest nav and later jumps to loginPage\r\n      <div>Loading....</div>\r\n    }\r\n\r\n    return (\r\n      <UserContext.Provider value={{\r\n        loggedIn,\r\n        user,\r\n        logIn: this.logIn,\r\n        logOut: this.logOut\r\n      }}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component, Suspense } from 'react';\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport UserContext from './Context';\r\n// import HomePage from './pages/home';\r\n// import RegisterPage from './pages/register';\r\n// import LoginPage from './pages/login';\r\n// import ProfilePage from './pages/profile';\r\n// import ItemsPage from './pages/items';\r\n// import CreatePage from './pages/create';\r\n// import NotFoundPage from './pages/not-found';\r\n\r\n// const Navigation = () => {\r\n//   return (\r\n//     <BrowserRouter>\r\n//       <Switch>\r\n//         <Route path=\"/\" exact component={HomePage} />\r\n//         <Route path=\"/user/register\" component={RegisterPage} />\r\n//         <Route path=\"/user/login\" component={LoginPage} />\r\n//         <Route path=\"/user/profile/:userId\" component={ProfilePage} />\r\n//         <Route path=\"/item\" exact component={ItemsPage} />\r\n//         <Route path=\"/item/create\" component={CreatePage} />\r\n//         <Route component={NotFoundPage} />\r\n//       </Switch>\r\n//     </BrowserRouter>\r\n//   );\r\n// };\r\n\r\n// export default Navigation;\r\n\r\nconst LazyHomePage = React.lazy(() => import('./pages/home'));\r\nconst LazyRegisterPage = React.lazy(() => import('./pages/register'));\r\nconst LazyLoginPage = React.lazy(() => import('./pages/login'));\r\nconst LazyProfilePage = React.lazy(() => import('./pages/profile'));\r\nconst LazyItemsPage = React.lazy(() => import('./pages/items'));\r\nconst LazyCreatePage = React.lazy(() => import('./pages/create'));\r\nconst LazyDetailsPage = React.lazy(() => import('./pages/details'));\r\nconst LazyNotFoundPage = React.lazy(() => import('./pages/not-found'));\r\n\r\nclass LazyNavigation extends Component {\r\n\r\n  static contextType = UserContext;\r\n\r\n  render() {\r\n    const {\r\n      loggedIn\r\n    } = this.context;\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <Suspense fallback={<h1>Loading.....</h1>}>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={LazyHomePage} />\r\n            <Route path=\"/user/register\" component={LazyRegisterPage} />\r\n            <Route path=\"/user/login\" component={LazyLoginPage} />\r\n            <Route path=\"/user/logout\" render={() => loggedIn ? null : <Redirect to=\"/\" />} />\r\n            <Route path=\"/user/profile/:userId\" component={LazyProfilePage} />\r\n            <Route path=\"/item\" exact component={LazyItemsPage} />\r\n            <Route path=\"/item/create\">\r\n              {\r\n                loggedIn\r\n                  ? (<LazyCreatePage />)\r\n                  : (<Redirect to=\"/user/login\" />)\r\n              }\r\n            </Route>\r\n            <Route path=\"/item/details/:itemId\">\r\n              {\r\n                loggedIn\r\n                  ? (<LazyDetailsPage />)\r\n                  : (<Redirect to=\"/user/login\" />)\r\n              }\r\n            </Route>\r\n            <Route component={LazyNotFoundPage} />\r\n          </Switch>\r\n        </Suspense>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LazyNavigation;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n// import Navigation from './navigation';\nimport LazyNavigation from './navigation';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App>\n      {/* <Navigation /> */}\n      <LazyNavigation />\n    </App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}