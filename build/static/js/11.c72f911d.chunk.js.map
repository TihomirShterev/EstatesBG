{"version":3,"sources":["services/userService.js","components/pages/user/register/index.module.css","components/pages/user/register/index.js"],"names":["url","userService","authenticate","path","data","onSuccess","onFailure","a","fetch","method","body","JSON","stringify","headers","promise","authToken","get","document","cookie","json","res","email","match","password","length","rePassword","id","_id","getProfileInfo","module","exports","RegisterPage","props","handleChange","event","type","newState","target","value","setState","handleSubmit","preventDefault","state","emailError","passwordError","rePasswordError","emptyFieldsError","user","context","logIn","history","push","err","console","log","this","emailErrorMessage","passwordErrorMessage","rePasswordErrorMessage","emptyFieldsErrorMessage","className","styles","register","onSubmit","htmlFor","name","onChange","e","placeholder","error","to","loggedIn","Component","contextType","UserContext"],"mappings":"2IAAMA,EAAM,4CAENC,EAAc,CAClBC,aAAa,WAAD,4BAAE,WAAOC,EAAMC,EAAMC,EAAWC,GAA9B,mBAAAC,EAAA,+EAEYC,MAAMR,EAAMG,EAAM,CACtCM,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACP,eAAgB,sBANV,cAEJC,EAFI,OAUJC,EAAYD,EAAQD,QAAQG,IAAI,iBACtCC,SAASC,OAAT,sBAAiCH,GAXvB,SAYQD,EAAQK,OAZhB,OAYJC,EAZI,OAcNL,GAES,cAATZ,GACIC,EAAKiB,MAAMC,MAAM,qCACjBlB,EAAKmB,SAASC,QAAU,GACxBpB,EAAKqB,aAAerB,EAAKmB,UACzBnB,EAAKiB,OAASjB,EAAKmB,UAAYnB,EAAKqB,YAO/B,WAATtB,IALAE,EAAU,CACRgB,MAAOD,EAAIC,MACXK,GAAIN,EAAIO,MAWZrB,IAnCQ,kDAsCVA,EAAU,EAAD,IAtCC,0DAAF,yDAAC,GAyCbsB,eAAe,WAAD,4BAAE,WAAOF,GAAP,SAAAnB,EAAA,+EACPC,MAAM,GAAD,OAAIR,EAAJ,wBAAuB0B,KADrB,2CAAF,mDAAC,IAMFzB,O,mBCjDf4B,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,SAAW,2BAA2B,IAAM,sBAAsB,MAAQ,wBAAwB,MAAQ,wBAAwB,cAAc,gC,wKCQ5LC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,aAAe,SAACC,EAAOC,GACrB,IAAMC,EAAW,GACjBA,EAASD,GAAQD,EAAMG,OAAOC,MAE9B,EAAKC,SAASH,IApBG,EAuBnBI,aAvBmB,uCAuBJ,WAAON,GAAP,qBAAA3B,EAAA,6DACb2B,EAAMO,iBADO,EAOT,EAAKC,MAHPrB,EAJW,EAIXA,MACAE,EALW,EAKXA,SACAE,EANW,EAMXA,WAGE,EAAIJ,EAAMG,SAAWH,EAAMC,MAAM,oCACnC,EAAKiB,SAAS,CACZI,YAAY,IAGd,EAAKJ,SAAS,CACZI,YAAY,IAIZ,EAAIpB,EAASC,QAAUD,EAASC,OAAS,EAC3C,EAAKe,SAAS,CACZK,eAAe,IAGjB,EAAKL,SAAS,CACZK,eAAe,IAIf,EAAInB,EAAWD,QAAUC,IAAeF,EAC1C,EAAKgB,SAAS,CACZM,iBAAiB,IAGnB,EAAKN,SAAS,CACZM,iBAAiB,IAIhBxB,GAAUE,GAAaE,EAK1B,EAAKc,SAAS,CACZO,kBAAkB,IALpB,EAAKP,SAAS,CACZO,kBAAkB,IAzCT,SAiDP7C,IAAYC,aAChB,YACA,CAAEmB,QAAOE,WAAUE,eACnB,SAACsB,GACC,EAAKC,QAAQC,MAAMF,GACnB,EAAKf,MAAMkB,QAAQC,KAAK,QAE1B,SAACC,GAAD,OAASC,QAAQC,IAAI,QAASF,MAxDnB,2CAvBI,sDAGjB,EAAKV,MAAQ,CACXrB,MAAO,GACPE,SAAU,GACVE,WAAY,GACZkB,YAAY,EACZC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,GAVH,E,0CAmFnB,WAAU,IAAD,SASHS,KAAKb,MAPPrB,EAFK,EAELA,MACAE,EAHK,EAGLA,SACAE,EAJK,EAILA,WAOI+B,EAXC,EAKLb,WAMqC,6BAA+B,KAChEc,EAZC,EAMLb,cAM2C,iEAAmE,KAC1Gc,EAbC,EAOLb,gBAM+C,mCAAqC,KAChFc,EAdC,EAQLb,iBAMiD,+BAAiC,KAEpF,OACE,eAAC,IAAD,WACE,sBAAMc,UAAWC,IAAOC,SAAUC,SAAUR,KAAKf,aAAjD,SACE,qCACE,mDAEA,oBAAGoB,UAAWC,IAAO,oBAArB,UACE,uBAAOG,QAAQ,QAAf,SAAuB,+BAAM,mBAAGJ,UAAU,wBAC1C,uBACEzB,KAAK,OACL8B,KAAK,QACLvC,GAAG,QACHY,MAAOjB,EACP6C,SAAU,SAACC,GAAD,OAAO,EAAKlC,aAAakC,EAAG,UACtCC,YAAY,8BAGhB,mBAAGR,UAAWC,IAAOQ,MAArB,SACGb,IAGH,oBAAGI,UAAWC,IAAO,oBAArB,UACE,uBAAOG,QAAQ,WAAf,SAA0B,+BAAM,mBAAGJ,UAAU,oBAC7C,uBACEzB,KAAK,WACL8B,KAAK,WACLvC,GAAG,WACHY,MAAOf,EACP2C,SAAU,SAACC,GAAD,OAAO,EAAKlC,aAAakC,EAAG,aACtCC,YAAY,cAGhB,mBAAGR,UAAWC,IAAOQ,MAArB,SACGZ,IAGH,oBAAGG,UAAWC,IAAO,oBAArB,UACE,uBAAOG,QAAQ,aAAf,SAA4B,+BAAM,mBAAGJ,UAAU,oBAC/C,uBACEzB,KAAK,WACL8B,KAAK,aACLvC,GAAG,aACHY,MAAOb,EACPyC,SAAU,SAACC,GAAD,OAAO,EAAKlC,aAAakC,EAAG,eACtCC,YAAY,cAGhB,mBAAGR,UAAWC,IAAOQ,MAArB,SACGX,IAGH,mBAAGE,UAAWC,IAAOQ,MAArB,SACGV,IAEH,wBAAQxB,KAAK,SAAb,4BAEA,oBAAGyB,UAAWC,IAAO,eAArB,gCAEE,cAAC,IAAD,CAAMS,GAAG,cAAT,2BAKJf,KAAKP,QAAQuB,SAAW,cAAC,IAAD,CAAUD,GAAG,MAAS,Y,GAnK7BE,aAArBzC,EAeG0C,YAAcC,IA0JR3C","file":"static/js/11.c72f911d.chunk.js","sourcesContent":["const url = 'https://estatesbg.herokuapp.com/api/users';\r\n\r\nconst userService = {\r\n  authenticate: async (path, data, onSuccess, onFailure) => {\r\n    try {\r\n      const promise = await fetch(url + path, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const authToken = promise.headers.get('Authorization');\r\n      document.cookie = `auth-cookie=${authToken}`;\r\n      const res = await promise.json();\r\n\r\n      if (authToken) {\r\n        if (\r\n          path === '/register'\r\n          && (data.email.match(/^[a-zA-Z0-9.-]{6,}@\\w+.(com|bg)$/))\r\n          && (data.password.length >= 6)\r\n          && (data.rePassword === data.password)\r\n          && (data.email && data.password && data.rePassword)\r\n        ) {\r\n          onSuccess({\r\n            email: res.email,\r\n            id: res._id\r\n          });\r\n        } else if (\r\n          path === '/login'\r\n        ) {\r\n          onSuccess({\r\n            email: res.email,\r\n            id: res._id\r\n          });\r\n        }\r\n      } else {\r\n        onFailure();\r\n      }\r\n    } catch (err) {\r\n      onFailure(err);\r\n    }\r\n  },\r\n  getProfileInfo: async (id) => {\r\n    return fetch(`${url}/profile?_id=${id}`);\r\n  }\r\n};\r\n\r\n\r\nexport default userService;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"register_login__ZZOm_\",\"register\":\"register_register__kF0f9\",\"tel\":\"register_tel__PZfe2\",\"field\":\"register_field__15Z9i\",\"error\":\"register_error__NZZAW\",\"input-error\":\"register_input-error__2aPJ_\"};","import React, { Component } from 'react';\r\nimport Layout from '../../../common/layout';\r\nimport styles from './index.module.css';\r\nimport {\r\n  Link, Redirect\r\n} from 'react-router-dom';\r\nimport UserContext from '../../../../Context';\r\nimport userService from '../../../../services/userService';\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      rePassword: \"\",\r\n      emailError: false,\r\n      passwordError: false,\r\n      rePasswordError: false,\r\n      emptyFieldsError: false\r\n    };\r\n  }\r\n\r\n  static contextType = UserContext;\r\n\r\n  handleChange = (event, type) => {\r\n    const newState = {};\r\n    newState[type] = event.target.value;\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      email,\r\n      password,\r\n      rePassword\r\n    } = this.state;\r\n\r\n    if (0 < email.length && !email.match(/^[a-zA-Z0-9.-]{6,}@\\w+.(com|bg)$/)) {\r\n      this.setState({\r\n        emailError: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        emailError: false\r\n      });\r\n    }\r\n\r\n    if (0 < password.length && password.length < 6) {\r\n      this.setState({\r\n        passwordError: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        passwordError: false\r\n      });\r\n    }\r\n\r\n    if (0 < rePassword.length && rePassword !== password) {\r\n      this.setState({\r\n        rePasswordError: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        rePasswordError: false\r\n      });\r\n    }\r\n\r\n    if (!email || !password || !rePassword) {\r\n      this.setState({\r\n        emptyFieldsError: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        emptyFieldsError: false\r\n      });\r\n    }\r\n\r\n    await userService.authenticate(\r\n      '/register',\r\n      { email, password, rePassword },\r\n      (user) => {\r\n        this.context.logIn(user);\r\n        this.props.history.push('/');\r\n      },\r\n      (err) => console.log('Error', err)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      rePassword,\r\n      emailError,\r\n      passwordError,\r\n      rePasswordError,\r\n      emptyFieldsError\r\n    } = this.state;\r\n\r\n    const emailErrorMessage = emailError ? 'Please enter a valid email' : null;\r\n    const passwordErrorMessage = passwordError ? 'Please enter a valid password consisting at least 6 characters' : null;\r\n    const rePasswordErrorMessage = rePasswordError ? 'Please enter a matching password' : null;\r\n    const emptyFieldsErrorMessage = emptyFieldsError ? 'Please fill all fields above' : null;\r\n\r\n    return (\r\n      <Layout>\r\n        <form className={styles.register} onSubmit={this.handleSubmit}>\r\n          <fieldset>\r\n            <h2>Registration Form</h2>\r\n\r\n            <p className={styles[\"field field-icon\"]}>\r\n              <label htmlFor=\"email\"><span><i className=\"fas fa-envelope\"></i></span></label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => this.handleChange(e, 'email')}\r\n                placeholder=\"pesho.peshev@gmail.com\"\r\n              />\r\n            </p>\r\n            <p className={styles.error}>\r\n              {emailErrorMessage}\r\n            </p>\r\n\r\n            <p className={styles[\"field field-icon\"]}>\r\n              <label htmlFor=\"password\"><span><i className=\"fas fa-lock\"></i></span></label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => this.handleChange(e, 'password')}\r\n                placeholder=\"******\"\r\n              />\r\n            </p>\r\n            <p className={styles.error}>\r\n              {passwordErrorMessage}\r\n            </p>\r\n\r\n            <p className={styles[\"field field-icon\"]}>\r\n              <label htmlFor=\"rePassword\"><span><i className=\"fas fa-lock\"></i></span></label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"rePassword\"\r\n                id=\"rePassword\"\r\n                value={rePassword}\r\n                onChange={(e) => this.handleChange(e, 'rePassword')}\r\n                placeholder=\"******\"\r\n              />\r\n            </p>\r\n            <p className={styles.error}>\r\n              {rePasswordErrorMessage}\r\n            </p>\r\n\r\n            <p className={styles.error}>\r\n              {emptyFieldsErrorMessage}\r\n            </p>\r\n            <button type=\"submit\">Create Account</button>\r\n\r\n            <p className={styles[\"text-center\"]}>\r\n              Already registered?\r\n              <Link to=\"/user/login\">Login</Link>\r\n            </p>\r\n\r\n          </fieldset>\r\n        </form>\r\n        { this.context.loggedIn ? <Redirect to=\"/\" /> : null}\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default RegisterPage;"],"sourceRoot":""}